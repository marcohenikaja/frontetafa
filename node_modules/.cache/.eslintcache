[{"F:\\devwithreact\\src\\pages\\Deconnexion.js":"1","F:\\devwithreact\\src\\index.js":"2","F:\\devwithreact\\src\\App.js":"3","F:\\devwithreact\\src\\pages\\Login.js":"4","F:\\devwithreact\\src\\pages\\Accueil.js":"5","F:\\devwithreact\\src\\pages\\Create.js":"6","F:\\devwithreact\\src\\pages\\Navbare.js":"7","F:\\devwithreact\\src\\pages\\Contact.js":"8","F:\\devwithreact\\src\\pages\\Message.js":"9","F:\\devwithreact\\src\\pages\\About.js":"10","F:\\devwithreact\\src\\pages\\Inscrit.js":"11","F:\\devwithreact\\src\\pages\\NavbareAdmin.js":"12","E:\\react_mongodb\\frontend\\src\\index.js":"13","E:\\react_mongodb\\frontend\\src\\App.js":"14","E:\\react_mongodb\\frontend\\src\\pages\\Login.js":"15","E:\\react_mongodb\\frontend\\src\\pages\\Create.js":"16","E:\\react_mongodb\\frontend\\src\\pages\\Contact.js":"17","E:\\react_mongodb\\frontend\\src\\pages\\Accueil.js":"18","E:\\react_mongodb\\frontend\\src\\pages\\Navbare.js":"19","E:\\react_mongodb\\frontend\\src\\pages\\About.js":"20","E:\\react_mongodb\\frontend\\src\\pages\\Message.js":"21","E:\\react_mongodb\\frontend\\src\\pages\\Inscrit.js":"22","E:\\react_mongodb\\frontend\\src\\pages\\NavbareAdmin.js":"23","E:\\react_mongodb\\frontend\\src\\pages\\Deconnexion.js":"24"},{"size":727,"mtime":1684086239071,"results":"25","hashOfConfig":"26"},{"size":227,"mtime":1682272403381,"results":"27","hashOfConfig":"26"},{"size":1597,"mtime":1684316898007,"results":"28","hashOfConfig":"26"},{"size":6462,"mtime":1684317577991,"results":"29","hashOfConfig":"26"},{"size":3958,"mtime":1686582042730,"results":"30","hashOfConfig":"26"},{"size":6314,"mtime":1684314474460,"results":"31","hashOfConfig":"26"},{"size":3300,"mtime":1684325715435,"results":"32","hashOfConfig":"26"},{"size":330,"mtime":1683902922329,"results":"33","hashOfConfig":"26"},{"size":6089,"mtime":1684434878191,"results":"34","hashOfConfig":"26"},{"size":519,"mtime":1682747020477,"results":"35","hashOfConfig":"26"},{"size":4788,"mtime":1684684358668,"results":"36","hashOfConfig":"26"},{"size":3563,"mtime":1684325704384,"results":"37","hashOfConfig":"26"},{"size":227,"mtime":1682272403381,"results":"38","hashOfConfig":"39"},{"size":1597,"mtime":1684316898007,"results":"40","hashOfConfig":"39"},{"size":6534,"mtime":1687504127434,"results":"41","hashOfConfig":"39"},{"size":6314,"mtime":1684314474460,"results":"42","hashOfConfig":"39"},{"size":330,"mtime":1683902922329,"results":"43","hashOfConfig":"39"},{"size":5483,"mtime":1688042883198,"results":"44","hashOfConfig":"39"},{"size":4211,"mtime":1687453021917,"results":"45","hashOfConfig":"39"},{"size":519,"mtime":1682747020477,"results":"46","hashOfConfig":"39"},{"size":6757,"mtime":1687850545566,"results":"47","hashOfConfig":"39"},{"size":5139,"mtime":1687249731165,"results":"48","hashOfConfig":"39"},{"size":3563,"mtime":1684325704384,"results":"49","hashOfConfig":"39"},{"size":194,"mtime":1687254781772,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"bkoimp",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"bjkr1l",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},"F:\\devwithreact\\src\\pages\\Deconnexion.js",["136","137"],[],"import axios from 'axios';\r\n\r\nconst Deconnexion = () => {\r\n    const deco = async (req, res) => {\r\n\r\n        try {\r\n            const mamono = await axios.get('http://localhost:8000/logout').then((response) => {\r\n                console.log(response.data);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default Deconnexion;\r\n\r\n// Exposer la fonction `deco` comme une mÃ©thode statique\r\nDeconnexion.deco = async () => {\r\n\r\n    try {\r\n        await axios.get('http://localhost:8000/logout').then((response) => {\r\n\r\n            window.location.href = './login';\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","F:\\devwithreact\\src\\index.js",[],[],"F:\\devwithreact\\src\\App.js",[],[],"F:\\devwithreact\\src\\pages\\Login.js",["138","139","140","141","142","143","144","145","146","147","148"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { FaInstagram } from \"react-icons/fa\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Create from \"./Create\";\r\nimport Message from \"./Message\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbare from \"./Navbare\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [anarana, setAnarana] = useState(null);\r\n\r\n    const connexion = async (req, res) => {\r\n        const data = { username, password };\r\n        if (data.username == \"\" || data.password == \"\") {\r\n            toast.error('Veuillez remplir les champs vides', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n\r\n            try {\r\n                await axios.post('http://localhost:8000/login', data)\r\n                    .then((response) => {\r\n                        if (response.data.success) {\r\n                            toast.success('Vous etes connecte', {\r\n                                position: \"top-center\",\r\n                                autoClose: 2000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                draggable: true,\r\n                                progress: undefined,\r\n                                theme: \"light\",\r\n                            });\r\n\r\n\r\n\r\n                            sessionStorage.setItem('userId', response.data.user['id']);\r\n                            sessionStorage.setItem('username', response.data.user['login']);\r\n                            if (response.data.user['id'] == 1) {\r\n                                window.location.href = './NavbareAdmin';\r\n                            }\r\n                            else {\r\n                                window.location.href = './Navbare';\r\n                            }\r\n\r\n\r\n                        } else {\r\n                            toast.error('Mot de passe ou Login invalide', {\r\n                                position: \"top-center\",\r\n                                autoClose: 2000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                draggable: true,\r\n                                progress: undefined,\r\n                                theme: \"light\",\r\n                            });\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n            } catch (error) {\r\n                toast.error('Nom d\\'utilisateur ou mot de passe incorrect', {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid className=\"bg-light min-vh-100 d-flex flex-column\">\r\n                <Row className=\"flex-grow-1\">\r\n                    <Col md={{ span: 4, offset: 4 }} className=\"my-auto\">\r\n                        <div className=\"bg-white border rounded p-5\">\r\n                            <div className=\"d-flex align-items-center\">\r\n\r\n                                <h1 className=\"ml-2\" style={{ color: 'maroon' }}>\r\n                                    E-Tafa\r\n                                </h1>\r\n                            </div>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nom d'utilisateur\"\r\n                                        value={username}\r\n                                        onChange={(e) => setUsername(e.target.value)} />\r\n\r\n                                </Form.Group>\r\n                                <br />\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"password\"\r\n                                        placeholder=\"Mot de passe\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n\r\n                                    />\r\n\r\n                                </Form.Group>\r\n                                <br />\r\n                                <Button onClick={connexion} variant=\"primary\" className=\"w-100 mt-3\">\r\n                                    Se connecter\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"mt-3 text-center\">\r\n                            <a href=\"/\">Mot de passe oubliÃ© ?</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center mt-3\">\r\n                        Vous n'avez pas de compte ? <NavLink\r\n                            to=\"/inscription\"\r\n                            style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n                        >Inscrivez-vous</NavLink>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <ToastContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","F:\\devwithreact\\src\\pages\\Accueil.js",["149","150","151","152","153","154"],[],"import React from 'react';\r\nimport Navbare from './Navbare';\r\nimport { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form';\r\nconst Accueil = () => {\r\n\r\n\r\n    const userId = sessionStorage.getItem('userId');\r\n    const username = sessionStorage.getItem('username');\r\n    const [like, setLike] = useState(0);\r\n    const [liked, setLiked] = useState(false);\r\n\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    const [pub, setPub] = useState(\"\");\r\n    const [pubs, setPubs] = useState([]);\r\n\r\n\r\n\r\n    const mampiakatra = () => {\r\n        if (liked) {\r\n            return;\r\n\r\n        }\r\n        setLike(like + 1);\r\n        setLiked(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        afficherPub();\r\n    }, [pub]);\r\n\r\n    const afficherPub = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/makapub');\r\n     \r\n            setPubs(response.data);\r\n            console.log(pubs);\r\n            pubs.map((p) => {\r\n                console.log(p.sender_id);\r\n            }\r\n            )\r\n            console.log(pubs[0].sender_id);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la rÃ©cupÃ©ration de la publication :\", error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const publier = (e) => {\r\n\r\n        e.preventDefault();\r\n        console.log(pub);\r\n        try {\r\n            axios.post('http://localhost:8000/publication', {\r\n                pub: pub,\r\n                sender_id: userId\r\n            }).then((response) => {\r\n                setPub(\"\")\r\n                if (response.data.success) {\r\n                    toast.success('Bien publiÃ©e', {\r\n                        position: \"top-center\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                    });\r\n                }\r\n\r\n            }).catch(() => {\r\n\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ marginTop: '100px' }}></div>\r\n            <Navbare />\r\n            <div>\r\n                <h2>CrÃ©er une publication</h2>\r\n                <form>\r\n                    <textarea value={pub} onChange={(e) => setPub(e.target.value)} rows=\"4\" cols=\"50\" placeholder=\"Exprimez-vous...\"></textarea>\r\n\r\n                    <br />\r\n                    <input type=\"file\" accept=\"image/*\" />\r\n                    <br />\r\n                    <br />\r\n                    <button onClick={publier}>Publier</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minHeight: '100vh' }}>\r\n                {pubs.map((pubs) => (\r\n\r\n\r\n                    <Card key={pubs.id} style={{ margin: '10px' }}>\r\n                        <Card.Header>Publication</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Special title treatment{pubs.sender_id}</Card.Title>\r\n                            <Card.Text>\r\n                                {pubs.texte} <br />\r\n                                <Form.Control as=\"textarea\" rows={4} />\r\n\r\n                            </Card.Text>\r\n                            <Button variant=\"primary\" disabled={liked} onClick={mampiakatra}>LIke {like}</Button>     <Button variant=\"primary\">Comment </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                ))}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accueil;\r\n","F:\\devwithreact\\src\\pages\\Create.js",["155","156","157","158","159","160"],[],"import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Navbare from './Navbare';\r\n\r\n\r\nconst Create = (props) => {\r\n\r\n    <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n    />\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [nom, setNom] = useState('');\r\n    const [prenom, setPrenom] = useState('');\r\n    const [date_de_naissance, setDateNaissance] = useState('');\r\n\r\n    const [donnee, setDonnee] = useState([])\r\n\r\n    useEffect(() => {\r\n        afficher();\r\n    }, [donnee]);\r\n\r\n    const afficher = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/afficherTous\");\r\n            setDonnee(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const ajouter = (e) => {\r\n        e.preventDefault()\r\n\r\n        const data = { nom, prenom, date_de_naissance }\r\n\r\n        if (data.nom == \"\" || data.prenom == \"\" || data.date_de_naissance == \"\") {\r\n\r\n            toast.warn('Veuillez remplir les champs vides', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        axios.post(\"http://localhost:8000/createOne\", data)\r\n            .then((response) => {\r\n                toast.success('Utilisateur bien ajoutÃ©!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                });\r\n                setNom(\"\")\r\n                setPrenom(\"\")\r\n                setDateNaissance(\"y\")\r\n                handleClose(true)\r\n                setDonnee(donnee)\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    const supprimer = (id) => {\r\n\r\n        try {\r\n            const supprime = axios.delete(`http://localhost:8000/deleteone/${id}`).then((response) => {\r\n                toast.error('Deleted', {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                });\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const modifier = (id) => {\r\n        try {\r\n            const manova = axios.put(`localhost:8000/updateOne/${id}`)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <div style={{ marginTop: '100px' }}></div>\r\n            <Navbare />\r\n\r\n            <>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Ouvrir le modal\r\n                </Button>\r\n                \r\n              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Entrer les informations</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"nom\">\r\n                                <Form.Label>Nom</Form.Label>\r\n                                <Form.Control type=\"text\" value={nom} onChange={e => setNom(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"prenom\">\r\n                                <Form.Label>PrÃ©nom</Form.Label>\r\n                                <Form.Control type=\"text\" value={prenom} onChange={e => setPrenom(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"dateNaissance\">\r\n                                <Form.Label>Date de naissance</Form.Label>\r\n                                <Form.Control type=\"date\" value={date_de_naissance} onChange={e => setDateNaissance(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Fermer\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={ajouter} type=\"submit\">\r\n                                Enregistrer les changements\r\n                            </Button>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Table id=\"tableau\" striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nom</th>\r\n                            <th>Mot de passe</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {donnee.map((user) => (\r\n                            <tr key={user.id}>\r\n                                <td>{user.login}</td>\r\n                                <td>{user.password}</td>\r\n                                <td> <Button variant=\"danger\" onClick={() => supprimer(user.id)}>Supprimer</Button> <Button variant=\"primary\">Update</Button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","F:\\devwithreact\\src\\pages\\Navbare.js",["161","162","163","164","165"],[],"import React, { useState } from 'react';\r\nimport { Navbar, Nav, Container, Form } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Deconnexion from './Deconnexion';\r\n\r\n\r\n\r\nconst userId = sessionStorage.getItem('userId');\r\nconst username = sessionStorage.getItem('username');\r\n\r\nconst Navbare = () => {\r\n  const [sessionData, setSessionData] = useState(null);\r\n\r\n  const handleClick = () => {\r\n    sessionStorage.removeItem(\"userId\");\r\n    sessionStorage.removeItem(\"username\");\r\n    sessionStorage.clear();\r\n  \r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    const username = sessionStorage.getItem(\"username\");\r\n  \r\n    if (userId === null && username === null) {\r\n      toast.success(\"Vous Ãªtes dÃ©connectÃ©\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      window.location.href = \"./Login\";\r\n    } else {\r\n      toast.error(\"ProblÃ¨me de dÃ©connexion\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    const isAuthenticated = sessionStorage.getItem(\"userId\") !== null;\r\n\r\n    if (!isAuthenticated) {\r\n      window.location.href = './Login';\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\" style={{ color: 'blue', fontSize: '40px', marginRight: '600px' }}>\r\n            E-Tafa  {username}\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <NavLink\r\n                to=\"/accueil\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Accueil\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/message\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Message\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/contact\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Contact\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/about\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                A propos\r\n              </NavLink>\r\n\r\n              <button onClick={handleClick}>DÃ©connexion</button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbare;\r\n","F:\\devwithreact\\src\\pages\\Contact.js",[],[],"F:\\devwithreact\\src\\pages\\Message.js",["166","167","168","169"],[],"import React, { useEffect, useState } from 'react';\r\nimport Navbare from './Navbare';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst userId = sessionStorage.getItem('userId');\r\nconst username = sessionStorage.getItem('username');\r\n\r\nconst Message = () => {\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [mess, setMess] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [list, setList] = useState([]);\r\n  const [temp, setTemp] = useState('');\r\n  const [anarana, setAnarana] = useState('')\r\n  const [lastMess, setLastMess] = useState('')\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async (id) => {\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/getUser/${userId}`);\r\n       // const last = await axios.get(`http://localhost:8000/getLast/${temp}/${userId}`);\r\n        //setLastMess(last.data['content']);\r\n        setList(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [mess]);\r\n\r\n  const afficher = (id, ana) => {\r\n    setAnarana(ana)\r\n    setTemp(id);\r\n    setUser(id);\r\n    fetchMessages(id);//id recipient_id ito \r\n  };\r\n\r\n  const fetchMessages = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/message/${id}/${userId}`);\r\n      setMess(response.data);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const userId = sessionStorage.getItem('userId');\r\n    setTemp(e.target.value);\r\n    if (temp === '') {\r\n      toast.error('Veuillez sÃ©lectionner un destinataire', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/message', {\r\n        sender_id: userId,\r\n        recipient_id: temp,\r\n        content: message,\r\n      });\r\n      if (response.data.success) {\r\n        const response = await axios.get(`http://localhost:8000/message/${temp}/${userId}`);\r\n        const tableau = response.data;\r\n        console.log(tableau);\r\n        const f = tableau.length - 1;\r\n        setTemp(tableau[f]['recipient_id']);\r\n        setMess(response.data);\r\n        setMessage('');\r\n      }\r\n      console.log('Le message a Ã©tÃ© envoyÃ©:', message);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8 mx-auto my-auto text-center\" >\r\n          <div style={{ marginTop: '100px' }}></div>\r\n          <Navbare />\r\n          <div style={{ position: 'fixed' }}>\r\n            <h3 style={{ marginBottom: '10px' }}>Message</h3>\r\n            <div style={{ display: 'flex' }}>\r\n              <input style={{ marginRight: '10px' }} value={message} onChange={handleChange} type=\"text\" />\r\n              <button onClick={sendMessage}>Envoyer</button>\r\n            </div>\r\n            <input type=\"hidden\" value={temp} />\r\n          </div>\r\n\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#fff' }}>\r\n            <div style={{ borderRadius: '100px' }}>\r\n              <div style={{ position: 'fixed', top: '100px', left: '50%', transform: 'translateX(-50%)' }}>\r\n                <input value={anarana} type=\"hidden\" />\r\n                <p style={{ background: 'lightgray', color: 'black', padding: '10px', borderRadius: '8px', maxWidth: '300px', margin: '10px auto', textAlign: 'center', marginLeft: '-380px' }}>\r\n                  EnvoyÃ© Ã  :  {anarana}\r\n                </p>\r\n\r\n              </div>\r\n\r\n              {mess.map((m) => (\r\n                <div key={m.id}>\r\n\r\n                  {m.sender_id != userId ? (\r\n                    <div>\r\n                      <p style={{ background: 'pink', color: 'white', height: '50px', width: '400px', borderRadius: '80px', textAlign: 'center', marginLeft: '-90px' }}>\r\n                        {m.content}\r\n                      </p>\r\n                      <p style={{ fontSize: '14px', marginLeft: '-300px' }} >{m.createdAt}</p>\r\n                    </div>\r\n\r\n                  ) : (\r\n                    <div >\r\n                      <p style={{ background: 'blue', color: 'white', height: '50px', width: '400px', borderRadius: '80px', textAlign: 'center', marginRight: '-900px' }} >\r\n                        {m.content}\r\n                      </p>\r\n                      <p style={{ fontSize: '14px', marginRight: '-300px' }}  >{m.createdAt}</p>\r\n                    </div>\r\n\r\n                  )}\r\n\r\n\r\n                </div>\r\n              ))}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\" style={{ backgroundColor: '#f0f2f5' }}>\r\n          <div style={{ marginTop: '100px' }}></div>\r\n          <div style={{ position: 'fixed' }}>\r\n            <h3>Liste des utilisateurs</h3>  <input type=\"hidden\" value={temp} />\r\n            {list.map((user) => (\r\n              <div key={user.id}>\r\n                <div\r\n                  className=\"rounded-circle d-flex align-items-center justify-content-center border p-2\"\r\n                  style={{\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    backgroundColor: 'pink',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={() => afficher(user.id, user.login)}\r\n                  key={user.id}\r\n                >\r\n                  {user.login}\r\n                </div>\r\n                {lastMess}\r\n              </div>\r\n\r\n\r\n            ))}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","F:\\devwithreact\\src\\pages\\About.js",[],[],"F:\\devwithreact\\src\\pages\\Inscrit.js",["170","171","172","173"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Inscrit() {\r\n    const [nom, setNom] = useState(\"\")\r\n    const [pass, setPass] = useState(\"\")\r\n    const [passcon, setPasscon] = useState(\"\")\r\n\r\n    const miova = (e) => {\r\n        setNom(e.target.value)\r\n    }\r\n\r\n    const inscription = async () => {\r\n        if (pass != passcon) {\r\n            toast.error('VÃ©rifier votre mot de passe', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n        } else if (nom==\"\" || passcon==\"\" || pass==\"\") {\r\n            toast.error('Veuillez remplir les champs vide  ', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n\r\n    } else {\r\n        const data = { nom, pass }\r\n            try {\r\n            await axios.post('http://localhost:8000/inscrit', data).then((response) => {\r\n               \r\n                window.location.href = './Login';\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n} catch (error) {\r\n    console.log(error);\r\n}\r\n\r\n        }\r\n    }\r\n\r\nreturn (\r\n    <div>\r\n        <Container fluid className=\"bg-light min-vh-100 d-flex flex-column\">\r\n            <Row className=\"flex-grow-1\">\r\n                <Col md={{ span: 4, offset: 4 }} className=\"my-auto\">\r\n                    <div className=\"bg-white border rounded p-5\">\r\n                        <h1 style={{ color: 'maroon' }}>\r\n                            E-Tafa\r\n                        </h1>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nom d'utilisateur\"\r\n                                    value={nom} onChange={miova}\r\n                                />\r\n\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"password\"\r\n                                    placeholder=\"Mot de passe\"\r\n                                    value={pass} onChange={(e) => {\r\n                                        setPass(e.target.value);\r\n                                    }}\r\n                                />\r\n\r\n                            </Form.Group> <br />\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"password\"\r\n                                    placeholder=\"Comfirmation de mot de passe\"\r\n                                    value={passcon} onChange={(e) => {\r\n                                        setPasscon(e.target.value);\r\n                                    }}\r\n                                />\r\n\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Button onClick={inscription} variant=\"primary\" className=\"w-100 mt-3\">\r\n                                S'inscrire\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"mt-3 text-center\">\r\n                        <a href=\"/\">Mot de passe oubliÃ© ?</a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-center mt-3\">\r\n                    DÃ©jÃ  inscrit ? <NavLink\r\n                        to=\"/login\"\r\n                        style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n                    >Connectez-vous</NavLink>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n        <ToastContainer />\r\n\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Inscrit;\r\n","F:\\devwithreact\\src\\pages\\NavbareAdmin.js",["174","175","176","177","178"],[],"import React, { useState } from 'react';\r\nimport { Navbar, Nav, Container, Form } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Deconnexion from './Deconnexion';\r\n\r\n\r\n\r\nconst userId = sessionStorage.getItem('userId');\r\nconst username = sessionStorage.getItem('username');\r\n\r\nconst NavbareAdmin = () => {\r\n  const [sessionData, setSessionData] = useState(null);\r\n\r\n  const handleClick = () => {\r\n    sessionStorage.removeItem(\"userId\");\r\n    sessionStorage.removeItem(\"username\");\r\n    sessionStorage.clear();\r\n  \r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    const username = sessionStorage.getItem(\"username\");\r\n  \r\n    if (userId === null && username === null) {\r\n      toast.success(\"Vous Ãªtes dÃ©connectÃ©\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      window.location.href = \"./Login\";\r\n    } else {\r\n      toast.error(\"ProblÃ¨me de dÃ©connexion\", {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    const isAuthenticated = sessionStorage.getItem(\"userId\") !== null;\r\n\r\n    if (!isAuthenticated) {\r\n      window.location.href = './Login';\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\" style={{ color: 'blue', fontSize: '40px', marginRight: '600px' }}>\r\n            E-Tafa  {username}\r\n          </Navbar.Brand>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <NavLink\r\n                to=\"/accueil\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Accueil\r\n              </NavLink>\r\n\r\n\r\n              <NavLink\r\n                to=\"/create\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Ban\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/message\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Message\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/contact\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Contact\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/about\"\r\n                style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                A propos\r\n              </NavLink>\r\n\r\n              <button onClick={handleClick}>DÃ©connexion</button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbareAdmin;\r\n","E:\\react_mongodb\\frontend\\src\\index.js",[],[],[],"E:\\react_mongodb\\frontend\\src\\App.js",[],[],"E:\\react_mongodb\\frontend\\src\\pages\\Login.js",["179","180","181","182","183","184","185","186","187","188","189"],[],"E:\\react_mongodb\\frontend\\src\\pages\\Create.js",["190","191","192","193","194","195"],[],"E:\\react_mongodb\\frontend\\src\\pages\\Contact.js",[],[],"E:\\react_mongodb\\frontend\\src\\pages\\Accueil.js",["196","197","198","199","200","201","202","203"],[],"E:\\react_mongodb\\frontend\\src\\pages\\Navbare.js",["204","205","206","207","208"],[],"import React, { useState } from 'react';\r\nimport { Navbar, Nav, Container, Form } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Deconnexion from './Deconnexion';\r\n\r\n\r\n\r\nconst userId = sessionStorage.getItem('userId');\r\nconst username = sessionStorage.getItem('username');\r\n\r\nconst Navbare = () => {\r\n  const [sessionData, setSessionData] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const isAuthenticated = sessionStorage.getItem(\"userId\") !== null;\r\n\r\n    if (!isAuthenticated) {\r\n      window.location.href = './Login';\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleClick = async () => {\r\n    const username = sessionStorage.getItem('username');\r\n\r\n    if (username) {\r\n      try {\r\n        await sessionStorage.removeItem('userId');\r\n        await sessionStorage.removeItem('username');\r\n        await sessionStorage.clear();\r\n\r\n        setTimeout(() => {\r\n          const clearedUsername = sessionStorage.getItem('username');\r\n          if (!clearedUsername) {\r\n            toast.success(\"Vous Ãªtes dÃ©connectÃ© \", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            window.location.href = \"./Login\";\r\n          } else {\r\n            toast.error(\"ProblÃ¨me de dÃ©connexion ppp\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n          }\r\n        }, 100);\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast.error(\"Erreur lors de la dÃ©connexion\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navbar bg=\"black\" expand=\"lg\" fixed=\"top\"style= {{borderRadius:'10px'}}>\r\n        <Container>\r\n          <Navbar.Brand href=\"#\" style={{ color: 'orange', fontSize: '40px', marginRight: '600px'  }}>\r\n            E-Tafa <span style={{ color: 'red' }}>{username}</span>\r\n          </Navbar.Brand>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <NavLink\r\n                to=\"/accueil\"\r\n                style={{ color: 'white', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Accueil\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/message\"\r\n                style={{ color: 'white', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Message\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/contact\"\r\n                style={{ color: 'white', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                Contact\r\n              </NavLink>\r\n              {/* <NavLink\r\n                to=\"/about\"\r\n                style={{ color: 'white', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n              >\r\n                A propos\r\n              </NavLink> */}\r\n\r\n              <button onClick={handleClick} style={{ padding: '8px 16px', border: 'none', borderRadius: '4px', backgroundColor: '#f44336', color: 'white', fontSize: '16px', cursor: 'pointer', }}  > DÃ©connexion\r\n              </button>\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbare;\r\n","E:\\react_mongodb\\frontend\\src\\pages\\About.js",[],[],"E:\\react_mongodb\\frontend\\src\\pages\\Message.js",["209","210","211","212","213"],[],"import React, { useEffect, useState } from 'react';\r\nimport Navbare from './Navbare';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst userId = sessionStorage.getItem('userId');\r\nconst username = sessionStorage.getItem('username');\r\n\r\nconst Message = () => {\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [mess, setMess] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [list, setList] = useState([]);\r\n  const [temp, setTemp] = useState('');\r\n  const [anarana, setAnarana] = useState('')\r\n  const [lastMess, setLastMess] = useState('')\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const userId = sessionStorage.getItem('userId');\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/toususers/${userId}`);\r\n        setList(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [mess]);\r\n\r\n\r\n\r\n  const afficher = (id, ana) => {\r\n\r\n    setAnarana(ana)\r\n    setTemp(id);\r\n    setUser(id);\r\n    fetchMessages(id);//id recipient_id ito \r\n  };\r\n\r\n  const fetchMessages = async (id) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/makamessage/${id}/${userId}`);\r\n      setMess(response.data);\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const userId = sessionStorage.getItem('userId');\r\n    setTemp(e.target.value);\r\n    if (temp === '') {\r\n      toast.error('Veuillez sÃ©lectionner un destinataire', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/message', {\r\n        sender_id: userId,\r\n        recipient_id: temp,\r\n        content: message,\r\n      });\r\n      if (response.data.success) {\r\n\r\n        const response = await axios.get(`http://localhost:8000/messagemaj/${temp}/${userId}`);\r\n        const tableau = response.data;\r\n        const f = tableau.length - 1;\r\n        setTemp(tableau[f]['recipient_id']);\r\n        setMess(response.data);\r\n        setMessage('');\r\n      }\r\n      console.log('Le message a Ã©tÃ© envoyÃ©:', message);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8 mx-auto my-auto text-center\" >\r\n          <div style={{ marginTop: '100px' }}></div>\r\n          <Navbare />\r\n          <div className=\"vatana\">\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#fff' }}>\r\n              <div style={{ borderRadius: '100px' }}>\r\n                <div style={{ position: 'fixed', top: '100px', left: '50%', transform: 'translateX(-50%)' }}>\r\n                  <input value={anarana} type=\"hidden\" />\r\n                  <p style={{ background: 'lightgray', color: 'black', padding: '10px', borderRadius: '8px', maxWidth: '300px', margin: '10px auto', textAlign: 'center', marginLeft: '-380px' }}>\r\n                    EnvoyÃ© Ã  :  {anarana}\r\n                  </p>\r\n\r\n                </div>\r\n\r\n                {mess.map((m) => (\r\n                  <div key={m.id}>\r\n\r\n                    {m.sender_id != userId ? (\r\n                      <div>\r\n                        <p style={{ background: 'pink', color: 'white', height: '50px', width: '400px', borderRadius: '80px', textAlign: 'center', marginLeft: '-90px' }}>\r\n                          {m.content}\r\n                        </p>\r\n                        <p style={{ fontSize: '14px', marginLeft: '-300px' }} >{m.createdAt}</p>\r\n                      </div>\r\n\r\n                    ) : (\r\n                      <div >\r\n                        <p style={{ background: 'blue', color: 'white', height: '50px', width: '400px', borderRadius: '80px', textAlign: 'center', marginRight: '-900px' }} >\r\n                          {m.content}\r\n                        </p>\r\n                        <p style={{ fontSize: '14px', marginRight: '-300px' }}  >{m.createdAt}</p>\r\n                      </div>\r\n\r\n                    )}\r\n\r\n\r\n                  </div>\r\n                ))}\r\n                <div style={{ position: 'fixed', bottom: '0', left: '50%', transform: 'translateX(-50%)' }}>\r\n\r\n                  <div style={{ display: 'flex' }}>\r\n                    <input style={{ marginRight: '10px', padding: '8px', border: '1px solid #ccc', borderRadius: '4px', fontSize: '16px', width: '400px' }} value={message}\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                    />\r\n                    <button\r\n                      style={{ padding: '8px 16px', border: 'none', borderRadius: '4px', backgroundColor: '#4CAF50', color: 'white', fontSize: '16px' }} onClick={sendMessage}  >\r\n                      Envoyer\r\n                    </button>\r\n\r\n                  </div>\r\n                  <input type=\"hidden\" value={temp} />\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\" style={{ backgroundColor: '#f0f2f5' }}>\r\n          <div style={{ marginTop: '100px' }}></div>\r\n          <div style={{ position: 'fixed' }}>\r\n            <h3 style={{ fontSize: '24px', fontWeight: 'bold', textAlign: 'center', marginBottom: '20px' }}>Liste des utilisateurs</h3>\r\n            <input type=\"hidden\" value={temp} />\r\n            <div>\r\n              {list.map((user) => (\r\n                <div key={user._id} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n                  <div\r\n                    className=\"rounded-circle d-flex align-items-center justify-content-center border p-2\"\r\n                    style={{\r\n                      border: '1px solid red',\r\n                      color: 'white',\r\n                      width: '50px',\r\n                      height: '50px',\r\n                      backgroundColor: 'black',\r\n                      cursor: 'pointer',\r\n\r\n                    }}\r\n                    onClick={() => afficher(user._id, user.login)}\r\n                  >\r\n                  \r\n                  </div>\r\n                  {user.login}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","E:\\react_mongodb\\frontend\\src\\pages\\Inscrit.js",["214","215","216","217","218"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Login from \"./Login\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Inscrit() {\r\n    const [nom, setNom] = useState(\"\")\r\n    const [pass, setPass] = useState(\"\")\r\n    const [passcon, setPasscon] = useState(\"\")\r\n\r\n    const miova = (e) => {\r\n        setNom(e.target.value)\r\n    }\r\n\r\n    const inscription = async () => {\r\n        if (pass != passcon) {\r\n            toast.error('VÃ©rifier votre mot de passe', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n        } else if (nom == \"\" || passcon == \"\" || pass == \"\") {\r\n            toast.error('Veuillez remplir les champs vide  ', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n\r\n        } else {\r\n            const data = { nom, pass }\r\n          \r\n            try {\r\n                await axios.post('http://localhost:8000/inscrit', data).then((response) => {\r\n    \r\n                    window.location.href = './login';\r\n\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container fluid className=\"bg-light min-vh-100 d-flex flex-column\">\r\n                <Row className=\"flex-grow-1\">\r\n                    <Col md={{ span: 4, offset: 4 }} className=\"my-auto\">\r\n                        <div className=\"bg-white border rounded p-5\">\r\n                            <h1 style={{ color: 'maroon' }}>\r\n                                E-Tafa\r\n                            </h1>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nom d'utilisateur\"\r\n                                        value={nom} onChange={miova}\r\n                                    />\r\n\r\n                                </Form.Group>\r\n                                <br />\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"password\"\r\n                                        placeholder=\"Mot de passe\"\r\n                                        value={pass} onChange={(e) => {\r\n                                            setPass(e.target.value);\r\n                                        }}\r\n                                    />\r\n\r\n                                </Form.Group> <br />\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"password\"\r\n                                        placeholder=\"Comfirmation de mot de passe\"\r\n                                        value={passcon} onChange={(e) => {\r\n                                            setPasscon(e.target.value);\r\n                                        }}\r\n                                    />\r\n\r\n                                </Form.Group>\r\n                                <br />\r\n                                <Button onClick={inscription} variant=\"primary\" className=\"w-100 mt-3\">\r\n                                    S'inscrire\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"mt-3 text-center\">\r\n                            <a href=\"/\">Mot de passe oubliÃ© ?</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"text-center mt-3\">\r\n                        DÃ©jÃ  inscrit ? <NavLink\r\n                            to=\"/login\"\r\n                            style={{ color: 'black', fontSize: '20px', textDecoration: 'none', borderBottom: 'none', marginRight: '35px' }}\r\n                        >Connectez-vous</NavLink>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <ToastContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inscrit;\r\n","E:\\react_mongodb\\frontend\\src\\pages\\NavbareAdmin.js",["219","220","221","222","223"],[],"E:\\react_mongodb\\frontend\\src\\pages\\Deconnexion.js",["224","225"],[],"import axios from 'axios';\r\n\r\nconst Deconnexion = () => {\r\n    const deco = async (req, res) => {\r\n\r\n       alert(\"e\")\r\n    };\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default Deconnexion;\r\n\r\n\r\n",{"ruleId":"226","severity":1,"message":"227","line":4,"column":11,"nodeType":"228","messageId":"229","endLine":4,"endColumn":15},{"ruleId":"226","severity":1,"message":"230","line":7,"column":19,"nodeType":"228","messageId":"229","endLine":7,"endColumn":25},{"ruleId":"226","severity":1,"message":"231","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":21},{"ruleId":"226","severity":1,"message":"232","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":14},{"ruleId":"226","severity":1,"message":"233","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"234","line":9,"column":8,"nodeType":"228","messageId":"229","endLine":9,"endColumn":15},{"ruleId":"226","severity":1,"message":"235","line":17,"column":12,"nodeType":"228","messageId":"229","endLine":17,"endColumn":20},{"ruleId":"226","severity":1,"message":"236","line":17,"column":22,"nodeType":"228","messageId":"229","endLine":17,"endColumn":33},{"ruleId":"226","severity":1,"message":"237","line":18,"column":12,"nodeType":"228","messageId":"229","endLine":18,"endColumn":19},{"ruleId":"226","severity":1,"message":"238","line":18,"column":21,"nodeType":"228","messageId":"229","endLine":18,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":22,"column":27,"nodeType":"241","messageId":"242","endLine":22,"endColumn":29},{"ruleId":"239","severity":1,"message":"240","line":22,"column":50,"nodeType":"241","messageId":"242","endLine":22,"endColumn":52},{"ruleId":"239","severity":1,"message":"240","line":56,"column":58,"nodeType":"241","messageId":"242","endLine":56,"endColumn":60},{"ruleId":"226","severity":1,"message":"243","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":14,"column":11,"nodeType":"228","messageId":"229","endLine":14,"endColumn":19},{"ruleId":"226","severity":1,"message":"245","line":18,"column":12,"nodeType":"228","messageId":"229","endLine":18,"endColumn":25},{"ruleId":"226","severity":1,"message":"246","line":18,"column":27,"nodeType":"228","messageId":"229","endLine":18,"endColumn":43},{"ruleId":"247","severity":1,"message":"248","line":35,"column":8,"nodeType":"249","endLine":35,"endColumn":13,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":43,"column":26,"nodeType":"253","messageId":"254","endLine":43,"endColumn":28},{"ruleId":"239","severity":1,"message":"240","line":50,"column":22,"nodeType":"241","messageId":"242","endLine":50,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":50,"column":43,"nodeType":"241","messageId":"242","endLine":50,"endColumn":45},{"ruleId":"239","severity":1,"message":"240","line":50,"column":75,"nodeType":"241","messageId":"242","endLine":50,"endColumn":77},{"ruleId":"226","severity":1,"message":"255","line":92,"column":19,"nodeType":"228","messageId":"229","endLine":92,"endColumn":27},{"ruleId":"226","severity":1,"message":"256","line":109,"column":11,"nodeType":"228","messageId":"229","endLine":109,"endColumn":19},{"ruleId":"226","severity":1,"message":"257","line":111,"column":19,"nodeType":"228","messageId":"229","endLine":111,"endColumn":25},{"ruleId":"226","severity":1,"message":"258","line":2,"column":34,"nodeType":"228","messageId":"229","endLine":2,"endColumn":38},{"ruleId":"226","severity":1,"message":"259","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":19},{"ruleId":"226","severity":1,"message":"260","line":10,"column":7,"nodeType":"228","messageId":"229","endLine":10,"endColumn":13},{"ruleId":"226","severity":1,"message":"261","line":14,"column":10,"nodeType":"228","messageId":"229","endLine":14,"endColumn":21},{"ruleId":"226","severity":1,"message":"262","line":14,"column":23,"nodeType":"228","messageId":"229","endLine":14,"endColumn":37},{"ruleId":"226","severity":1,"message":"244","line":7,"column":7,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"263","line":13,"column":10,"nodeType":"228","messageId":"229","endLine":13,"endColumn":14},{"ruleId":"226","severity":1,"message":"264","line":17,"column":20,"nodeType":"228","messageId":"229","endLine":17,"endColumn":31},{"ruleId":"239","severity":1,"message":"265","line":129,"column":32,"nodeType":"241","messageId":"242","endLine":129,"endColumn":34},{"ruleId":"239","severity":1,"message":"265","line":19,"column":18,"nodeType":"241","messageId":"242","endLine":19,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":30,"column":23,"nodeType":"241","messageId":"242","endLine":30,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":30,"column":38,"nodeType":"241","messageId":"242","endLine":30,"endColumn":40},{"ruleId":"239","severity":1,"message":"240","line":30,"column":50,"nodeType":"241","messageId":"242","endLine":30,"endColumn":52},{"ruleId":"226","severity":1,"message":"258","line":2,"column":34,"nodeType":"228","messageId":"229","endLine":2,"endColumn":38},{"ruleId":"226","severity":1,"message":"259","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":19},{"ruleId":"226","severity":1,"message":"260","line":10,"column":7,"nodeType":"228","messageId":"229","endLine":10,"endColumn":13},{"ruleId":"226","severity":1,"message":"261","line":14,"column":10,"nodeType":"228","messageId":"229","endLine":14,"endColumn":21},{"ruleId":"226","severity":1,"message":"262","line":14,"column":23,"nodeType":"228","messageId":"229","endLine":14,"endColumn":37},{"ruleId":"226","severity":1,"message":"231","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":21},{"ruleId":"226","severity":1,"message":"232","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":14},{"ruleId":"226","severity":1,"message":"233","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"234","line":9,"column":8,"nodeType":"228","messageId":"229","endLine":9,"endColumn":15},{"ruleId":"226","severity":1,"message":"266","line":10,"column":8,"nodeType":"228","messageId":"229","endLine":10,"endColumn":15},{"ruleId":"226","severity":1,"message":"235","line":18,"column":12,"nodeType":"228","messageId":"229","endLine":18,"endColumn":20},{"ruleId":"226","severity":1,"message":"236","line":18,"column":22,"nodeType":"228","messageId":"229","endLine":18,"endColumn":33},{"ruleId":"226","severity":1,"message":"237","line":19,"column":12,"nodeType":"228","messageId":"229","endLine":19,"endColumn":19},{"ruleId":"226","severity":1,"message":"238","line":19,"column":21,"nodeType":"228","messageId":"229","endLine":19,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":23,"column":27,"nodeType":"241","messageId":"242","endLine":23,"endColumn":29},{"ruleId":"239","severity":1,"message":"240","line":23,"column":50,"nodeType":"241","messageId":"242","endLine":23,"endColumn":52},{"ruleId":"239","severity":1,"message":"240","line":50,"column":22,"nodeType":"241","messageId":"242","endLine":50,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":50,"column":43,"nodeType":"241","messageId":"242","endLine":50,"endColumn":45},{"ruleId":"239","severity":1,"message":"240","line":50,"column":75,"nodeType":"241","messageId":"242","endLine":50,"endColumn":77},{"ruleId":"226","severity":1,"message":"255","line":92,"column":19,"nodeType":"228","messageId":"229","endLine":92,"endColumn":27},{"ruleId":"226","severity":1,"message":"256","line":109,"column":11,"nodeType":"228","messageId":"229","endLine":109,"endColumn":19},{"ruleId":"226","severity":1,"message":"257","line":111,"column":19,"nodeType":"228","messageId":"229","endLine":111,"endColumn":25},{"ruleId":"226","severity":1,"message":"243","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":24},{"ruleId":"226","severity":1,"message":"267","line":10,"column":8,"nodeType":"228","messageId":"229","endLine":10,"endColumn":16},{"ruleId":"226","severity":1,"message":"244","line":16,"column":11,"nodeType":"228","messageId":"229","endLine":16,"endColumn":19},{"ruleId":"226","severity":1,"message":"268","line":42,"column":19,"nodeType":"228","messageId":"229","endLine":42,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":64,"column":8,"nodeType":"249","endLine":64,"endColumn":13,"suggestions":"269"},{"ruleId":"251","severity":1,"message":"252","line":74,"column":26,"nodeType":"253","messageId":"254","endLine":74,"endColumn":28},{"ruleId":"239","severity":1,"message":"240","line":137,"column":28,"nodeType":"241","messageId":"242","endLine":137,"endColumn":30},{"ruleId":"270","severity":1,"message":"271","line":137,"column":58,"nodeType":"272","endLine":137,"endColumn":102},{"ruleId":"226","severity":1,"message":"258","line":2,"column":34,"nodeType":"228","messageId":"229","endLine":2,"endColumn":38},{"ruleId":"226","severity":1,"message":"259","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":19},{"ruleId":"226","severity":1,"message":"260","line":10,"column":7,"nodeType":"228","messageId":"229","endLine":10,"endColumn":13},{"ruleId":"226","severity":1,"message":"261","line":14,"column":10,"nodeType":"228","messageId":"229","endLine":14,"endColumn":21},{"ruleId":"226","severity":1,"message":"262","line":14,"column":23,"nodeType":"228","messageId":"229","endLine":14,"endColumn":37},{"ruleId":"226","severity":1,"message":"244","line":7,"column":7,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"263","line":13,"column":10,"nodeType":"228","messageId":"229","endLine":13,"endColumn":14},{"ruleId":"226","severity":1,"message":"273","line":17,"column":10,"nodeType":"228","messageId":"229","endLine":17,"endColumn":18},{"ruleId":"226","severity":1,"message":"264","line":17,"column":20,"nodeType":"228","messageId":"229","endLine":17,"endColumn":31},{"ruleId":"239","severity":1,"message":"265","line":124,"column":34,"nodeType":"241","messageId":"242","endLine":124,"endColumn":36},{"ruleId":"226","severity":1,"message":"274","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":13},{"ruleId":"239","severity":1,"message":"265","line":20,"column":18,"nodeType":"241","messageId":"242","endLine":20,"endColumn":20},{"ruleId":"239","severity":1,"message":"240","line":31,"column":24,"nodeType":"241","messageId":"242","endLine":31,"endColumn":26},{"ruleId":"239","severity":1,"message":"240","line":31,"column":41,"nodeType":"241","messageId":"242","endLine":31,"endColumn":43},{"ruleId":"239","severity":1,"message":"240","line":31,"column":55,"nodeType":"241","messageId":"242","endLine":31,"endColumn":57},{"ruleId":"226","severity":1,"message":"258","line":2,"column":34,"nodeType":"228","messageId":"229","endLine":2,"endColumn":38},{"ruleId":"226","severity":1,"message":"259","line":6,"column":8,"nodeType":"228","messageId":"229","endLine":6,"endColumn":19},{"ruleId":"226","severity":1,"message":"260","line":10,"column":7,"nodeType":"228","messageId":"229","endLine":10,"endColumn":13},{"ruleId":"226","severity":1,"message":"261","line":14,"column":10,"nodeType":"228","messageId":"229","endLine":14,"endColumn":21},{"ruleId":"226","severity":1,"message":"262","line":14,"column":23,"nodeType":"228","messageId":"229","endLine":14,"endColumn":37},{"ruleId":"226","severity":1,"message":"275","line":1,"column":8,"nodeType":"228","messageId":"229","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":4,"column":11,"nodeType":"228","messageId":"229","endLine":4,"endColumn":15},"no-unused-vars","'deco' is assigned a value but never used.","Identifier","unusedVar","'mamono' is assigned a value but never used.","'FaInstagram' is defined but never used.","'Create' is defined but never used.","'Message' is defined but never used.","'Navbare' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'anarana' is assigned a value but never used.","'setAnarana' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ToastContainer' is defined but never used.","'username' is assigned a value but never used.","'selectedImage' is assigned a value but never used.","'setSelectedImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'afficherPub'. Either include it or remove the dependency array.","ArrayExpression",["276"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'supprime' is assigned a value but never used.","'modifier' is assigned a value but never used.","'manova' is assigned a value but never used.","'Form' is defined but never used.","'Deconnexion' is defined but never used.","'userId' is assigned a value but never used.","'sessionData' is assigned a value but never used.","'setSessionData' is assigned a value but never used.","'user' is assigned a value but never used.","'setLastMess' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Accueil' is defined but never used.","'FormData' is defined but never used.","'micommanty' is assigned a value but never used.",["277"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'lastMess' is assigned a value but never used.","'Login' is defined but never used.","'axios' is defined but never used.",{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},"Update the dependencies array to be: [afficherPub, pub]",{"range":"281","text":"282"},{"range":"283","text":"282"},[962,967],"[afficherPub, pub]",[1660,1665]]